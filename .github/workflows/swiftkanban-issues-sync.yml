name: SwiftKanban Issues Sync
on:
  workflow_call:
    inputs:
      default_work_type:
        required: false
        type: string
        default: 'ISS'
      customer_name:
        required: true
        type: string
    secrets:
      host:
        required: true
      board_id:
        required: true
      token:
        required: true
jobs:
  add_card:
    runs-on: ubuntu-latest
    env:
      PAYLOAD_FILENAME: 'payload.json'
    steps:
      - name: Create payload
        env:
          CARD_WORKTYPE_DEFAULT: ${{ inputs.default_work_type }}
          CARD_CUSTOMER_NAME: ${{ inputs.customer_name }}
          CARD_WORKTYPE_MAPPINGS: '{ "bug": "BUG","enhancement": "ENHC" }'
        run: |
          jq \
          --compact-output \
          --arg wkt_default "$CARD_WORKTYPE_DEFAULT" \
          --argjson wkt_mappings "$CARD_WORKTYPE_MAPPINGS" \
          --arg customer "$CARD_CUSTOMER_NAME"  \
          '.issue | 
          {"card": [ {
            "workType": ([ $wkt_mappings[ .labels[].name ] ][0] // $wkt_default),
            "name": .title, 
            "description": .body,
            "shorttext1": $customer
            } ]
          }' \
          "$GITHUB_EVENT_PATH" \
          > "$GITHUB_WORKSPACE/$PAYLOAD_FILENAME"
      - name: Send payload
        env:
          SK_TOKEN: ${{ secrets.token }}
          SK_HOST: ${{ secrets.host }}
          SK_BOARD_ID: ${{ secrets.board_id }}
        run: |
          response=$(curl \
          --no-progress-meter \
          --request POST "https://$SK_HOST/restapi/card-operations/boards/$SK_BOARD_ID/cards" \
          --header "AuthorizationToken: $SK_TOKEN" \
          --header 'Content-Type: application/json' \
          --data-binary "@$GITHUB_WORKSPACE/$PAYLOAD_FILENAME")
          
          response_status=$(echo "$response" | jq --raw-output .Response.details.cardDetails[0].responseStatus)
          
          if [[ "$response_status" != "Successful" ]]; then
            echo "$response" | jq .
            exit 1
          fi